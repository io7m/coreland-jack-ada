jack_client_t *: jack_client_open :const char *client_name: jack_options_t options: jack_status_t *status:...:
jack_client_t *: jack_client_new :const char *client_name:
int: jack_client_close :jack_client_t *client:
int: jack_client_name_size :void:
char *:jack_get_client_name :jack_client_t *client:
int: jack_internal_client_new :const char *client_name: const char *load_name: const char *load_init:
void:jack_internal_client_close :const char *client_name:
int: jack_activate :jack_client_t *client:
int: jack_deactivate :jack_client_t *client:
pthread_t: jack_client_thread_id :jack_client_t *:
int: jack_is_realtime :jack_client_t *client:
jack_nframes_t:jack_thread_wait :jack_client_t *: int status:
jack_nframes_t:jack_cycle_wait :jack_client_t *client:
void:jack_cycle_signal :jack_client_t *client: int status:
int: jack_set_process_thread :jack_client_t *client: JackThreadCallback fun: void *arg:
int: jack_set_thread_init_callback :jack_client_t *client: JackThreadInitCallback thread_init_callback: void *arg:
void:jack_on_shutdown :jack_client_t *client: void(*function)(void *arg): void *arg:
int: jack_set_process_callback :jack_client_t *client: JackProcessCallback process_callback: void *arg:
int: jack_set_freewheel_callback :jack_client_t *client: JackFreewheelCallback freewheel_callback: void *arg:
int: jack_set_buffer_size_callback :jack_client_t *client: JackBufferSizeCallback bufsize_callback: void *arg:
int: jack_set_sample_rate_callback :jack_client_t *client: JackSampleRateCallback srate_callback: void *arg:
int: jack_set_client_registration_callback :jack_client_t *: JackClientRegistrationCallback registration_callback: void *arg:
int: jack_set_port_registration_callback :jack_client_t *: JackPortRegistrationCallback registration_callback: void *arg:
int: jack_set_port_connect_callback :jack_client_t *: JackPortConnectCallback connect_callback: void *arg:
int: jack_set_graph_order_callback :jack_client_t *: JackGraphOrderCallback graph_callback: void *:
int: jack_set_xrun_callback :jack_client_t *: JackXRunCallback xrun_callback: void *arg:
int: jack_set_freewheel :jack_client_t *client: int onoff:
int: jack_set_buffer_size :jack_client_t *client: jack_nframes_t nframes:
jack_nframes_t:jack_get_sample_rate :jack_client_t *:
jack_nframes_t:jack_get_buffer_size :jack_client_t *:
int: jack_engine_takeover_timebase :jack_client_t *:
float: jack_cpu_load :jack_client_t *client:
jack_port_t *: jack_port_register :jack_client_t *client: const char *port_name: const char *port_type: unsigned long flags: unsigned long buffer_size:
int: jack_port_unregister :jack_client_t *: jack_port_t *:
void *:jack_port_get_buffer :jack_port_t *: jack_nframes_t:
const char *:jack_port_name :const jack_port_t *port:
const char *:jack_port_short_name :const jack_port_t *port:
int: jack_port_flags :const jack_port_t *port:
const char *:jack_port_type :const jack_port_t *port:
int: jack_port_is_mine :const jack_client_t *: const jack_port_t *port:
int: jack_port_connected :const jack_port_t *port:
int: jack_port_connected_to :const jack_port_t *port: const char *port_name:
const char **: jack_port_get_connections :const jack_port_t *port:
const char **: jack_port_get_all_connections :const jack_client_t *client: const jack_port_t *port:
int: jack_port_tie :jack_port_t *src: jack_port_t *dst:
int: jack_port_untie :jack_port_t *port:
jack_nframes_t:jack_port_get_latency :jack_port_t *port:
jack_nframes_t:jack_port_get_total_latency :jack_client_t *: jack_port_t *port:
void:jack_port_set_latency :jack_port_t *: jack_nframes_t:
int: jack_recompute_total_latency :jack_client_t *: jack_port_t *port:
int: jack_recompute_total_latencies :jack_client_t *:
int: jack_port_set_name :jack_port_t *port: const char *port_name:
int: jack_port_set_alias :jack_port_t *port: const char *alias:
int: jack_port_unset_alias :jack_port_t *port: const char *alias:
int: jack_port_get_aliases :const jack_port_t *port: char *const aliases[2]:
int: jack_port_request_monitor :jack_port_t *port: int onoff:
int: jack_port_request_monitor_by_name :jack_client_t *client: const char *port_name: int onoff:
int: jack_port_ensure_monitor :jack_port_t *port: int onoff:
int: jack_port_monitoring_input :jack_port_t *port:
int: jack_connect :jack_client_t *: const char *source_port: const char *destination_port:
int: jack_disconnect :jack_client_t *: const char *source_port: const char *destination_port:
int: jack_port_disconnect :jack_client_t *: jack_port_t *:
int: jack_port_name_size :void:
int: jack_port_type_size :void:
const char **: jack_get_ports :jack_client_t *: const char *port_name_pattern: const char *type_name_pattern: unsigned long flags:
jack_port_t *: jack_port_by_name :jack_client_t *: const char *port_name:
jack_port_t *: jack_port_by_id :jack_client_t *client: jack_port_id_t port_id:
jack_nframes_t:jack_frames_since_cycle_start :const jack_client_t *:
jack_nframes_t:jack_frame_time :const jack_client_t *:
jack_nframes_t:jack_last_frame_time :const jack_client_t *client:
jack_time_t: jack_frames_to_time :const jack_client_t *client: jack_nframes_t:
jack_nframes_t:jack_time_to_frames :const jack_client_t *client: jack_time_t:
jack_time_t: jack_get_time ::
void:jack_set_error_function :void(*func)(const char *):
void:jack_set_info_function :void(*func)(const char *):
